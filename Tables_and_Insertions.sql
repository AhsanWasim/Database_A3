
Use [ASSIGNMENT 3];

ALTER TABLE TEAMS
ADD CONSTRAINT HOME_STADIUM_ID
FOREIGN KEY (HOME_STADIUM_ID)
REFERENCES STADIUMS(ID);

ALTER TABLE PLAYERS_DESCRIPTION
ADD CONSTRAINT PLAYER_ID
FOREIGN KEY (PLAYER_ID) REFERENCES PLAYERS(PLAYER_ID);
 
ALTER TABLE PLAYERS
ADD CONSTRAINT TEAM_ID
FOREIGN KEY (TEAM_ID) 
REFERENCES TEAMS(ID);

ALTER TABLE MANAGERS
ADD CONSTRAINT TEAMID
FOREIGN KEY (TEAM_ID) 
REFERENCES TEAMS(ID);

ALTER TABLE MATCHES
ADD CONSTRAINT TEAMSID
FOREIGN KEY (HOME_TEAM_ID) 
REFERENCES TEAMS(ID);

ALTER TABLE MATCHES
ADD CONSTRAINT TEAMSID1
FOREIGN KEY (AWAY_TEAM_ID) 
REFERENCES TEAMS(ID);

ALTER TABLE MATCHES
ADD CONSTRAINT STADIUMID
FOREIGN KEY (STADIUM_ID) 
REFERENCES STADIUMS(ID);

ALTER TABLE MATCH_REPORT
ADD CONSTRAINT MATCH_ID
FOREIGN KEY (MATCH_ID) 
REFERENCES MATCHES(MATCH_ID);

ALTER TABLE GOALS
ADD CONSTRAINT GOAL_MATCH_ID
FOREIGN KEY (MATCH_ID) 
REFERENCES MATCHES(MATCH_ID);

ALTER TABLE GOALS
ADD CONSTRAINT GOAL_PLAYERS_ID
FOREIGN KEY (PID) 
REFERENCES PLAYERS(PLAYER_ID);


/*QUESTION 1 
All the players that have played under a specific manager.*/
SELECT PLAYER_ID, FIRST_NAME , LAST_NAME, NATIONALITY,DOB ,
TEAM_ID, TEAM_NAME, COUNTRY 
FROM players PL JOIN TEAMS TM ON PL.TEAM_ID = TM.ID
WHERE TEAM_ID = (SELECT TEAM_ID FROM MANAGERS WHERE FIRST_NAME = 'STEFANO') 
ORDER BY PLAYER_ID ASC;


/*QUESTION 3
All the teams that have won more than 3 matches in their home stadium.
(Assume a team wins only if they scored more goals then other team)*/
SELECT t.ID,T.team_name, T.COUNTRY,T.HOME_STADIUM_ID
FROM teams T
INNER JOIN matches ON t.id = matches.HOME_TEAM_ID
INNER JOIN match_report ON matches.match_id = match_report.match_id
WHERE match_report.HOME_TEAM_SCORE > match_report.AWAY_TEAM_SCORE
GROUP BY t.ID,T.TEAM_NAME, T.COUNTRY,T.HOME_STADIUM_ID
HAVING COUNT(*) > 3;


/*QUESTION 5
All the matches that were played in stadiums with seating capacity greater
than 60,000.
*/
SELECT MATCH_ID, SEASON, DATE_TIME, M.STADIUM_ID, S.NAME, S.CITY, S.COUNTRY, S.CAPACITY
FROM matches M JOIN STADIUM S ON M.STADIUM_ID = S.ID
WHERE S.CAPACITY > 60000;


/*QUESTION 7
All Russian teams with win percentage less than 50% in home matches.
*/
SELECT teams.team_name, COUNT(*) AS total_matches, 
SUM(CASE WHEN match_report.HOME_TEAM_SCORE > match_report.AWAY_TEAM_SCORE THEN 1 ELSE 0 END) AS home_wins,
SUM(CASE WHEN match_report.HOME_TEAM_SCORE < match_report.AWAY_TEAM_SCORE THEN 1 ELSE 0 END) AS home_losses,
SUM(CASE WHEN match_report.HOME_TEAM_SCORE = match_report.AWAY_TEAM_SCORE THEN 1 ELSE 0 END) AS home_draws,
ROUND(SUM(CASE WHEN match_report.HOME_TEAM_SCORE > match_report.AWAY_TEAM_SCORE THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) 
AS home_win_percentage
FROM teams
INNER JOIN matches ON teams.id = matches.HOME_TEAM_ID
INNER JOIN match_report ON matches.match_id = match_report.match_id
WHERE teams.country = 'Russia'
GROUP BY teams.TEAM_NAME
ORDER BY home_win_percentage;


/*QUESTION 9
The season with the greatest number of left-foot goals.
*/
SELECT top 1 SEASON, COUNT(SEASON) as [GOAL COUNTS]
FROM GOALS G JOIN matches M ON G.MATCH_ID = M.MATCH_ID
WHERE GOAL_DESC = 'LEFT-FOOTED SHOT' 
GROUP BY SEASON
ORDER BY COUNT(SEASON) desc;


/*QUESTION 11
All the stadiums with greater number of left-footed shots than right-footed
shots.
*/
SELECT S.ID, S.CITY,S.COUNTRY,S.CAPACITY ,
COUNT(CASE WHEN G.GOAL_DESC = 'LEFT-FOOTED SHOT' THEN 1 END) AS [LEFT FOOT SHOTS],
COUNT(CASE WHEN G.GOAL_DESC = 'RIGHT-FOOTED SHOT' THEN 1 END) AS [RIGHT FOOT SHOTS]
FROM GOALS G JOIN matches M ON G.MATCH_ID = M.MATCH_ID
JOIN STADIUM S ON S.ID = M.STADIUM_ID
GROUP BY S.ID,S.CITY,S.COUNTRY,S.CAPACITY
HAVING COUNT(CASE WHEN G.GOAL_DESC = 'LEFT-FOOTED SHOT' THEN 1 END)
> COUNT(CASE WHEN G.GOAL_DESC = 'RIGHT-FOOTED SHOT' THEN 1 END)
ORDER BY S.ID ASC;


/*QUESTION 13
The player duo with the greatest number of goal-assist combination (i.e.
pair of players that have assisted each other in more goals than any other duo).
*/
SELECT TOP 1
p1.PLAYER_ID,
CONCAT(p1.first_name, ' ', p1.last_name) AS [PLAYER 1],
p1.DOB,p1.NATIONALITY,p1.TEAM_ID,
COUNT(*) AS [GOALS_ASSISTS],
p2.PLAYER_ID,
CONCAT(p2.first_name, ' ', p2.last_name) AS [PLAYER 2],
p2.DOB,p2.NATIONALITY,p2.TEAM_ID
FROM 
goals G1
JOIN goals G2 ON g1.assist = g2.pid AND g1.pid = g2.assist
JOIN players P1 ON g1.pid = p1.PLAYER_ID
JOIN players P2 ON g2.pid = p2.PLAYER_ID
GROUP BY  
p1.PLAYER_ID,
CONCAT(p1.first_name, ' ', p1.last_name),
p1.DOB,p1.NATIONALITY,p1.TEAM_ID,
p2.PLAYER_ID,
CONCAT(p2.first_name, ' ', p2.last_name),
p2.DOB,p2.NATIONALITY,p2.TEAM_ID
ORDER BY GOALS_ASSISTS DESC;


/*QUESTION 15
The most successful manager of UCL (2016-2022).
*/
SELECT top 1 MR.ID, CONCAT(MR.FIRST_NAME,' ',MR.LAST_NAME) AS [FULL NAME],
COUNT(CASE WHEN  HOME_TEAM_SCORE > AWAY_TEAM_SCORE THEN 1 END) +
COUNT(CASE WHEN  HOME_TEAM_SCORE < AWAY_TEAM_SCORE THEN 1 END) AS [TOTAL WINS],
MR.DOB, MR.NATIONALITY,MR.TEAM_ID
FROM TEAMS T JOIN matches M ON M.HOME_TEAM_ID = T.ID
JOIN MANAGERS MR ON MR.TEAM_ID = T.ID 
JOIN match_report MT ON MT.MATCH_ID = M.MATCH_ID
WHERE M.SEASON BETWEEN '2016-2017' AND '2021-2022'
GROUP BY MR.ID, CONCAT(MR.FIRST_NAME,' ',MR.LAST_NAME),
MR.DOB, MR.NATIONALITY,MR.TEAM_ID
ORDER BY [TOTAL WINS] DESC; 

